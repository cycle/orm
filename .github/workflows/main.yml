name: build

on: [push, pull_request]

jobs:
  lint:
    name: Check coding standards
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Get Composer Cache Directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"
      - name: Restore Composer Cache
        uses: actions/cache@v2
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.json') }}
          restore-keys: ${{ runner.os }}-composer-
      - name: Install Dependencies
        run: composer install --no-interaction --prefer-dist
      - name: Check CS
        run: vendor/bin/spiral-cs check src tests
  test:
    needs: sqlite
    name: Test PHP ${{ matrix.php-versions }} with Code Coverage
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        php-versions: ['7.2', '7.3', '7.4', '8.0']
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup DB services
        run: |
          cd tests
          docker-compose up -d
          cd ..
      - name: Setup PHP ${{ matrix.php-versions }}
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-versions }}
          coverage: pcov
          tools: pecl
          extensions: mbstring, pdo, pdo_sqlite, pdo_pgsql, pdo_sqlsrv, pdo_mysql
      - name: Get Composer Cache Directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"
      - name: Restore Composer Cache
        uses: actions/cache@v2
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.json') }}
          restore-keys: ${{ runner.os }}-composer-
      - name: Install Dependencies
        run: composer install --no-interaction --prefer-dist
      - name: Execute Tests
        run: |
          vendor/bin/phpunit --coverage-clover=coverage.xml
      - name: Upload coverage to Codecov
        continue-on-error: true # if is fork
        uses: codecov/codecov-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ./coverage.xml

  sqlite:
    name: SQLite PHP ${{ matrix.php-versions }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        php-versions: ['7.2', '7.3', '7.4', '8.0']
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup PHP ${{ matrix.php-versions }}
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-versions }}
          coverage: pcov
          tools: pecl
          extensions: mbstring, pdo, pdo_sqlite
      - name: Get Composer Cache Directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"
      - name: Restore Composer Cache
        uses: actions/cache@v2
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.json') }}
          restore-keys: ${{ runner.os }}-composer-
      - name: Install Dependencies
        run: composer install --no-interaction --prefer-dist
      - name: Execute Tests
        env:
          DB: sqlite
        run: |
          vendor/bin/phpunit tests/ORM/Driver/SQLite --colors=always
